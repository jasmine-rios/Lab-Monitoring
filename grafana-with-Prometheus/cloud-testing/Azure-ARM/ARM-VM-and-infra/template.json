{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "allowedValues": [
                "AzureGov.USVirginia",
                "eastus"
            ]
        },
        "networkInterfaceName": {
            "type": "string"
        },
        "networkInterfaceNameHost1": {
            "type": "string"
        },
        "networkInterfaceNameHost2": {
            "type": "string"
        },
        "networkSecurityGroupName": {
            "type": "string"
        },
        "networkSecurityGroupNameHosts": {
            "type": "string"
        },
        "networkSecurityGroupRules": {
            "type": "array"
        },
        "publicIpAddressName": {
            "type": "string"
        },
        "publicIpAddressType": {
            "type": "string"
        },
        "publicIpAddressSku": {
            "type": "string"
        },
        "virtualMachineName": {
            "type": "string"
        },
        "virtualMachineHost1Name": {
            "type": "string"
        },
        "virtualMachineHost2Name": {
            "type": "string"
        },
        "osDiskType": {
            "type": "string"
        },
        "virtualMachineSize": {
            "type": "string"
        },
        "virtualMachineSizeHosts": {
            "type": "string"
        },
        "adminUsername": {
            "type": "string"
        },
        "securityType": {
            "type": "string"
        },
        "secureBoot": {
            "type": "bool"
        },
        "vTPM": {
            "type": "bool"
        },
        "sshPublicKey": {
            "type": "string"
        },
        "virtualNetworkName": {
            "type": "string"
        },
        "Subnet1": {
            "type": "string"
        },
        "Subnet2": {
            "type": "string"
        }
    },
    "functions": [],
    "variables": {},
    "resources": [
    {
        "name": "[parameters('virtualNetworkName')]",
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2022-11-01",
        "location": "[parameters('location')]",
        "properties": {
            "addressSpace": {
                "addressPrefixes": [
                    "10.0.0.0/16"
                ]
            },
            "subnets": [
                {
                    "name": "Grafana-Subnet",
                    "properties": {
                        "addressPrefix": "10.0.1.0/24"
                    }
                }
            ]
        },
        "tags": {
            "Template by": "Jasmine Rios",
            "Project": "Grafana"
        }
    },
    {
        "name": "[parameters('networkInterfaceName')]",
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2022-11-01",
        "location": "[parameters('location')]",
        "dependsOn": [
            "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]",
            "[concat('Microsoft.Network/publicIpAddresses/', parameters('publicIpAddressName'))]",
            "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
        ],
        "properties": {
            "ipConfigurations": [
                {
                    "name": "ipconfig1",
                    "properties": {
                        "subnet": {
                            "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), '/subnets/Grafana-Subnet')]"
                        },
                        "privateIPAllocationMethod": "Dynamic",
                        "publicIpAddress": {
                            "id": "[resourceId('Microsoft.Network/publicIpAddresses', parameters('publicIpAddressName'))]"
                        }
                    }
                }
            ],
            "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
            }
        },
        "tags": {
            "Template by": "Jasmine Rios",
            "Project": "Grafana"
        }
    },
    {
        "name": "[parameters('networkSecurityGroupName')]",
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2019-02-01",
        "location": "[parameters('location')]",
        "properties": {
            "securityRules": "[parameters('networkSecurityGroupRules')]"
        },
        "tags": {
            "Template by": "Jasmine Rios",
            "Project": "Grafana"
        }
    },
    {
        "name": "[parameters('publicIpAddressName')]",
        "type": "Microsoft.Network/publicIpAddresses",
        "apiVersion": "2019-02-01",
        "location": "[parameters('location')]",
        "properties": {
            "publicIpAllocationMethod": "[parameters('publicIpAddressType')]"
        },
        "sku": {
            "name": "[parameters('publicIpAddressSku')]"
        },
        "tags": {
            "Template by": "Jasmine Rios",
            "Project": "Grafana"
        }
    },
{
  "name": "[parameters('virtualMachineName')]",
  "type": "Microsoft.Compute/virtualMachines",
  "apiVersion": "2021-03-01",
  "location": "[parameters('location')]",
  "dependsOn": [
    "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceName'))]"
  ],
  "properties": {
    "hardwareProfile": {
      "vmSize": "[parameters('virtualMachineSize')]"
    },
    "securityProfile": {
        "securityType": "[parameters('securityType')]",
        "uefiSettings": {
            "secureBootEnabled": "[parameters('secureBoot')]",
            "vTpmEnabled": "[parameters('vTPM')]"
        }
  },
    "diagnosticsProfile": {
        "bootDiagnostics": {
            "enabled": true
        }
    },
    "storageProfile": {
      "osDisk": {
        "createOption": "fromImage",
        "managedDisk": {
          "storageAccountType": "[parameters('osDiskType')]"
        }
      },
      "imageReference": {
        "publisher": "redhat",
        "offer": "rhel-raw",
        "sku": "92_gen2",
        "version": "latest"
      }
    },
    "networkProfile": {
      "networkInterfaces": [
        {
          "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName'))]"
        }
      ]
    },
    "osProfile": {
        "computerName": "[parameters('virtualMachineName')]",
        "adminUsername": "[parameters('adminUsername')]",
        "customData": ["base64('#cloud-config\\npackage_upgrade: true\\npackages:\\n  - grafana-enterprise # Install Grafana package\\n\\nruncmd:\\n  - if systemctl is-active --quiet grafana-server; then echo \\\"Grafana is already installed and running.\\\"; echo \\\"To access the Grafana UI, use the following URL in a supported browser:\\\"; echo \\\"http://<PublicIp>:3000\\\"; echo \\\"Use admin as the username and password, then reset the password\\\"; else sudo yum install -y https://dl.grafana.com/enterprise/release/grafana-enterprise-10.3.3-1.x86_64.rpm # Latest package, change if not latest; sudo systemctl enable grafana-server; sudo systemctl daemon-reload; sudo firewall-cmd --zone=public --add-port=3000/tcp --permanent; sudo sed -i 's/;protocol = http/protocol = http/' /etc/grafana/grafana.ini; sudo sed -i 's/;http_port = 3000/http_port = 3000/' /etc/grafana/grafana.ini; sudo systemctl start grafana-server; sudo systemctl status grafana-server; fi')"],
      "linuxConfiguration": {
        "disablePasswordAuthentication": true,
        "ssh": {
          "publicKeys": [
            {
              "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
              "keyData": "[parameters('sshPublicKey')]"
            }
          ]
        }
      }
    }
  },
  "tags": {
    "Template by": "Jasmine Rios",
    "Project": "Grafana"
  }
},
{
  "name": "[parameters('virtualMachineHost1Name')]",
  "type": "Microsoft.Compute/virtualMachines",
  "apiVersion": "2021-03-01",
  "location": "[parameters('location')]",
  "dependsOn": [
    "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceNameHost1'))]"
  ],
  "properties": {
    "hardwareProfile": {
      "vmSize": "[parameters('virtualMachineSizeHosts')]"
    },
    "securityProfile": {
        "securityType": "[parameters('securityType')]",
        "uefiSettings": {
            "secureBootEnabled": "[parameters('secureBoot')]",
            "vTpmEnabled": "[parameters('vTPM')]"
        }
  },
    "diagnosticsProfile": {
        "bootDiagnostics": {
            "enabled": true
        }
    },
    "storageProfile": {
      "osDisk": {
        "createOption": "fromImage",
        "managedDisk": {
          "storageAccountType": "[parameters('osDiskType')]"
        }
      },
      "imageReference": {
        "publisher": "canonical",
        "offer": "",
        "sku": "92_gen2",
        "version": "latest"
      }
    },
    "networkProfile": {
      "networkInterfaces": [
        {
          "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceNameHost1'))]"
        }
      ]
    },
    "osProfile": {
        "computerName": "[parameters('virtualMachineHost1Name')]",
        "adminUsername": "[parameters('adminUsername')]",
        "customData": null
    }
  }
}
],
    "outputs": {
        "SSH Instructions": {
            "type": "string",
            "value": "[concat('To SSH into the instance, use the following command:\nssh -i <path-to-private-key>/<name-of-private-key> ', parameters('adminUsername'), '@', reference(resourceId('Microsoft.Network/publicIpAddresses', parameters('publicIpAddressName'))).ipAddress, '\nPlease remember to change permissions of the private key with `chmod 400 <path-to-private-key>/<name-of-private-key>` before SSHing.')]"

        }
    }
}
